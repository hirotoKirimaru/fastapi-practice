{"uid":"ba573eb62b494176","name":"test_response_json","fullName":"tests.scenario.test_healthcheck#test_response_json","historyId":"b6ecf638bd4232ce22fb07d52a5ed6ed","time":{"start":1715936958707,"stop":1715936958718,"duration":11},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not callable","statusTrace":"async_client = <httpx.AsyncClient object at 0x7f7f94d53380>\n\n    @pytest.mark.asyncio\n    async def test_response_json(async_client):\n>       response = await async_client.get(\"/health/\")\n\ntests/scenario/test_healthcheck.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1801: in get\n    return await self.request(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1574: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/httpx.py:141: in send\n    rv = await real_send(self, request, **kwargs)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1661: in send\n    response = await self._send_handling_auth(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1689: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1726: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_client.py:1763: in _send_single_request\n    response = await transport.handle_async_request(request)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/httpx/_transports/asgi.py:164: in handle_async_request\n    await self.app(scope, receive, send)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/fastapi/applications.py:1054: in __call__\n    await super().__call__(scope, receive, send)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/starlette.py:352: in _sentry_patched_asgi_app\n    return await middleware(scope, receive, send)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/asgi.py:144: in _run_asgi3\n    return await self._run_app(scope, receive, send, asgi_version=3)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/asgi.py:235: in _run_app\n    raise exc from None\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/asgi.py:230: in _run_app\n    return await self.app(\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/applications.py:123: in __call__\n    await self.middleware_stack(scope, receive, send)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/starlette.py:154: in _create_span_call\n    return await old_call(app, scope, new_receive, new_send, **kwargs)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/middleware/errors.py:186: in __call__\n    raise exc\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/middleware/errors.py:164: in __call__\n    await self.app(scope, receive, _send)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/sentry_sdk/integrations/starlette.py:154: in _create_span_call\n    return await old_call(app, scope, new_receive, new_send, **kwargs)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/middleware/base.py:189: in __call__\n    with collapse_excgroups():\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/_utils.py:93: in collapse_excgroups\n    raise exc\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <starlette.middleware.base.BaseHTTPMiddleware object at 0x7f7f97982ed0>\nscope = {'app': <fastapi.applications.FastAPI object at 0x7f7f9dae2780>, 'asgi': {'version': '3.0'}, 'client': ('127.0.0.1', 1...(b'user-agent', b'python-httpx/0.27.0'), (b'sentry-trace', b'91c79a37de4f443f9a03bb67308c1cc1-80610e8da2fc075e')], ...}\nreceive = <function _enable_span_for_middleware.<locals>._create_span_call.<locals>._sentry_receive at 0x7f7f94a5f4c0>\nsend = <function _enable_span_for_middleware.<locals>._create_span_call.<locals>._sentry_send at 0x7f7f94a5f740>\n\n    async def __call__(self, scope: Scope, receive: Receive, send: Send) -> None:\n        if scope[\"type\"] != \"http\":\n            await self.app(scope, receive, send)\n            return\n    \n        request = _CachedRequest(scope, receive)\n        wrapped_receive = request.wrapped_receive\n        response_sent = anyio.Event()\n    \n        async def call_next(request: Request) -> Response:\n            app_exc: Exception | None = None\n            send_stream: ObjectSendStream[typing.MutableMapping[str, typing.Any]]\n            recv_stream: ObjectReceiveStream[typing.MutableMapping[str, typing.Any]]\n            send_stream, recv_stream = anyio.create_memory_object_stream()\n    \n            async def receive_or_disconnect() -> Message:\n                if response_sent.is_set():\n                    return {\"type\": \"http.disconnect\"}\n    \n                async with anyio.create_task_group() as task_group:\n    \n                    async def wrap(func: typing.Callable[[], typing.Awaitable[T]]) -> T:\n                        result = await func()\n                        task_group.cancel_scope.cancel()\n                        return result\n    \n                    task_group.start_soon(wrap, response_sent.wait)\n                    message = await wrap(wrapped_receive)\n    \n                if response_sent.is_set():\n                    return {\"type\": \"http.disconnect\"}\n    \n                return message\n    \n            async def close_recv_stream_on_response_sent() -> None:\n                await response_sent.wait()\n                recv_stream.close()\n    \n            async def send_no_error(message: Message) -> None:\n                try:\n                    await send_stream.send(message)\n                except anyio.BrokenResourceError:\n                    # recv_stream has been closed, i.e. response_sent has been set.\n                    return\n    \n            async def coro() -> None:\n                nonlocal app_exc\n    \n                async with send_stream:\n                    try:\n                        await self.app(scope, receive_or_disconnect, send_no_error)\n                    except Exception as exc:\n                        app_exc = exc\n    \n            task_group.start_soon(close_recv_stream_on_response_sent)\n            task_group.start_soon(coro)\n    \n            try:\n                message = await recv_stream.receive()\n                info = message.get(\"info\", None)\n                if message[\"type\"] == \"http.response.debug\" and info is not None:\n                    message = await recv_stream.receive()\n            except anyio.EndOfStream:\n                if app_exc is not None:\n                    raise app_exc\n                raise RuntimeError(\"No response returned.\")\n    \n            assert message[\"type\"] == \"http.response.start\"\n    \n            async def body_stream() -> typing.AsyncGenerator[bytes, None]:\n                async with recv_stream:\n                    async for message in recv_stream:\n                        assert message[\"type\"] == \"http.response.body\"\n                        body = message.get(\"body\", b\"\")\n                        if body:\n                            yield body\n                        if not message.get(\"more_body\", False):\n                            break\n    \n                if app_exc is not None:\n                    raise app_exc\n    \n            response = _StreamingResponse(\n                status_code=message[\"status\"], content=body_stream(), info=info\n            )\n            response.raw_headers = message[\"headers\"]\n            return response\n    \n        with collapse_excgroups():\n            async with anyio.create_task_group() as task_group:\n                response = await self.dispatch_func(request, call_next)\n>               await response(scope, wrapped_receive, send)\nE               TypeError: 'NoneType' object is not callable\n\n/opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/starlette/middleware/base.py:192: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1715936955446,"stop":1715936955446,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop","time":{"start":1715936958686,"stop":1715936958686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"async_client","time":{"start":1715936958686,"stop":1715936958707,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"async_client::finalizer","time":{"start":1715936958876,"stop":1715936958876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::3","time":{"start":1715936958877,"stop":1715936958877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1715936958877,"stop":1715936958877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_restore_policy","time":{"start":1715936958877,"stop":1715936958877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1715936958877,"stop":1715936958877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.scenario"},{"name":"suite","value":"test_healthcheck"},{"name":"host","value":"fv-az570-22"},{"name":"thread","value":"3685-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scenario.test_healthcheck"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["asyncio"]},"source":"ba573eb62b494176.json","parameterValues":[]}